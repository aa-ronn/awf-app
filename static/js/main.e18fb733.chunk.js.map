{"version":3,"sources":["utils/env.js","context/toast/toast.context.tsx","context/auth/auth.context.tsx","components/header/header.component.tsx","components/spinner/spinner.component.tsx","components/form/form.component.tsx","components/input/input.component.tsx","components/signin/signin.component.tsx","components/signup/signup.component.tsx","pages/signin-signup/signin-signup.page.tsx","hooks/useWindowDimensions.ts","models/project.ts","models/task.ts","context/store/store.context.tsx","components/sidebar/link-block/link-block.component.tsx","components/sidebar/user-details-block/user-details-block.component.tsx","components/sidebar/sidebar.component.tsx","components/fab/fab.component.tsx","components/tooltip/tooltip.component.tsx","components/card/card.component.tsx","components/modal/modal.component.tsx","pages/projects/projects.page.tsx","components/select/select.component.tsx","pages/tasks/tasks.page.tsx","pages/_404/_404.page.tsx","components/card/member-card/member-card.component.tsx","pages/project/project.page.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["host","ToastContext","createContext","notify","message","type","a","ToastProvider","children","useCallback","toast","error","Provider","value","AuthContext","token","user","signUpWithEmailAndPassword","signInWithEmailAndPassword","signOut","AuthProvider","useState","setToken","setUser","useContext","firstName","lastName","email","password","Promise","resolve","reject","axios","method","url","data","then","res","catch","err","console","log","Header","title","className","onClick","Spinner","isLoading","emoji","Form","handleSubmit","projectName","buttonLabel","onSubmit","e","Input","handleChange","label","otherProps","onChange","SignIn","signInState","setSignInState","setIsLoading","event","target","name","handleFormSubmit","preventDefault","placeholder","required","SignUp","signUpState","setSignUpState","SignInSignUpPage","isSigningIn","setIsSigningIn","getWindowDimensions","window","width","innerWidth","height","innerHeight","useWindowDimensions","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","Project","id","description","members","tasks","created","this","Task","projectID","dueDate","assigned_to","due_date","StoreContext","projects","workingProject","assignedTasks","getASingleProject","createAProject","deleteAProject","updateAProject","createATask","projectId","updateATask","taskId","deleteATask","ttaskId","addMemberToAProject","memberEmail","deleteMemberFromAProject","addMemberToAProjectTask","deleteMemberFromAProjectTask","StoreProvider","setProjects","setWorkingProject","setAssignedTasks","getAllProjects","headers","authorization","receivedProjects","Array","index","length","proj","push","memberList","project","taskList","getAllTasksAssignedToAUser","receivedTasks","task","task_id","project_id","assigned_To","receivedProject","LinkBlock","text","urlPath","location","useLocation","history","useHistory","pathname","UserDetailsBlock","Sidebar","menuIsOpen","setMenuIsOpen","SidebarContent","Fab","icon","shape","Tooltip","position","Card","secondaryId","line1","line2","line3","cardClick","addMembersClick","editTaskClick","substring","undefined","filter","map","forEach","member","faPlus","Modal","setModalOpen","ProjectsPage","isModalOpen","setIsModalOpen","addProjectState","setAddProjectState","handleCardClick","Select","list","item","key","TasksPage","initialTaskState","selectOption","addTaskState","setAddTaskState","_404Page","MemberCard","faMinus","ProjectPage","params","useParams","workingTaskId","setWorkingTaskId","taskID","editTaskState","setEditTaskState","selectedProjectID","handleDeleteTaskCardClick","taskIndex","handleDeleteMemberCardClick","memberIndex","handleFabClick","setModalType","handleEditTaskClick","titleRef","useRef","descriptionRef","titleEditCapture","descriptionEditCapture","finishEditTitle","current","innerText","finishEditDescription","modalType","addMemberState","setAddMemberState","handleDeleteMemberFromTask","find","contentEditable","suppressContentEditableWarning","ref","faEdit","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e18fb733.chunk.js","sourcesContent":["const LIVE_HOST_URL = \"https://monkey-business-api.herokuapp.com\";\nconst LOCAL_HOST_URL = \"http://localhost:5000\";\n\nexport const isDevelopment = process.env.NODE_ENV === \"development\";\nexport const host = isDevelopment ? LIVE_HOST_URL : LOCAL_HOST_URL;\n","import { FC, createContext, useCallback } from \"react\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { ToastContextType } from \"../../types/toast-context\";\r\n\r\nimport \"./toast.styles.scss\";\r\n\r\nconst ToastContext = createContext<ToastContextType>({\r\n  notify: async (message: string, type?: \"default\" | \"error\") => null,\r\n});\r\n\r\nconst ToastProvider: FC = ({ children }) => {\r\n  /**\r\n   * Shows a toast with the provided values.\r\n   * @param message The message to be displayed in the toast.\r\n   * @param type the type of toast to show \"default\" or \"error\"\r\n   * defaults to \"default\".\r\n   */\r\n  const notify = useCallback((message: string, type?: \"default\" | \"error\") => {\r\n    if (!type) {\r\n      type = \"default\";\r\n    }\r\n    if (type === \"default\") {\r\n      toast(message);\r\n    } else if (\"error\") {\r\n      toast.error(message);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <ToastContext.Provider\r\n      value={{\r\n        notify,\r\n      }}\r\n    >\r\n      <ToastContainer />\r\n      {children}\r\n    </ToastContext.Provider>\r\n  );\r\n};\r\n\r\nexport { ToastProvider, ToastContext };\r\n","import axios from \"axios\";\r\nimport { FC, createContext, useState, useContext } from \"react\";\r\n\r\nimport { AuthContextType } from \"../../types/auth-context\";\r\nimport { User } from \"../../models/user\";\r\nimport { host } from \"../../utils/env\";\r\nimport { ToastContext } from \"../toast/toast.context\";\r\n\r\nconst AuthContext = createContext<AuthContextType>({\r\n  token: null,\r\n  user: null,\r\n  signUpWithEmailAndPassword: async () => \"\",\r\n  signInWithEmailAndPassword: async () => \"\",\r\n  signOut: () => {},\r\n});\r\n\r\nconst AuthProvider: FC = ({ children }) => {\r\n  const [token, setToken] = useState<string | null>(null);\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const { notify } = useContext(ToastContext);\r\n\r\n  /**\r\n   * Signs up new a user..\r\n   * @param firstName the users first name\r\n   * @param lastName the users last name\r\n   * @param email the users email\r\n   * @param password the users password\r\n   * @returns promise of success or failure\r\n   */\r\n  const signUpWithEmailAndPassword = (\r\n    firstName: string,\r\n    lastName: string,\r\n    email: string,\r\n    password: string\r\n  ): Promise<string> =>\r\n    new Promise((resolve, reject) => {\r\n      axios({\r\n        method: \"post\",\r\n        url: host + \"/auth/register\",\r\n        data: {\r\n          firstName: firstName,\r\n          lastName: lastName,\r\n          email: email,\r\n          password: password,\r\n        },\r\n      })\r\n        .then((res: any) => {\r\n          setToken(res.data.token);\r\n          setUser(res.data.user);\r\n          notify(`Hey, ${res.data.user.firstName}`);\r\n        })\r\n        .then(() => {\r\n          resolve(\"User created\");\r\n        })\r\n        .catch((err) => {\r\n          notify(err.message, \"error\");\r\n          console.log(err);\r\n          reject(err);\r\n        });\r\n    });\r\n\r\n  /**\r\n   * Logs a user in based off input username and password.\r\n   * @param email the users email\r\n   * @param password the users password\r\n   * @returns promise of success or failure\r\n   */\r\n  const signInWithEmailAndPassword = (\r\n    email: string,\r\n    password: string\r\n  ): Promise<string> =>\r\n    new Promise((resolve, reject) => {\r\n      axios({\r\n        method: \"post\",\r\n        url: host + \"/auth/login\",\r\n        data: {\r\n          email: email,\r\n          password: password,\r\n        },\r\n      })\r\n        .then((res: any) => {\r\n          setToken(res.data.token);\r\n          setUser(res.data.user);\r\n          notify(`Hey, ${res.data.user.firstName}!`);\r\n        })\r\n        .then(() => {\r\n          resolve(\"User Loged In\");\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          notify(err.message, \"error\");\r\n          console.log(err);\r\n          reject(err);\r\n        });\r\n    });\r\n\r\n  /**\r\n   * Signs out the current user.\r\n   * @param none\r\n   * @returns none\r\n   */\r\n  const signOut = () => {\r\n    setToken(null);\r\n    setUser(null);\r\n    console.log(\"Signed Out\");\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        token,\r\n        user,\r\n        signUpWithEmailAndPassword,\r\n        signInWithEmailAndPassword,\r\n        signOut,\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport { AuthProvider, AuthContext };\r\n","import { FC, useContext } from \"react\";\r\nimport { AuthContext } from \"../../context/auth/auth.context\";\r\nimport \"./header.styles.scss\";\r\n\r\nexport const Header: FC<{ title?: string }> = ({ title }) => {\r\n  const { signOut } = useContext(AuthContext);\r\n  return (\r\n    <div className=\"header-component\">\r\n      <div className=\"left-content\">{/* <h1>{title}</h1> */}</div>\r\n\r\n      <div className=\"right-content\">\r\n        {/* <div className=\"user-details\">Hey, {user?.firstName}!</div> */}\r\n        <button onClick={signOut}>\r\n          <div>Sign Out </div>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { FC } from \"react\";\r\n\r\nimport \"./spinner.styles.scss\";\r\n\r\nexport const Spinner: FC<{ isLoading: boolean; emoji?: string }> = ({\r\n  isLoading,\r\n  emoji = \"🐵\",\r\n}) => {\r\n  return (\r\n    <span className={`spinner ${isLoading && \"spin\"}`}>\r\n      {isLoading && emoji}\r\n    </span>\r\n  );\r\n};\r\n","import { FC, FormEvent } from \"react\";\r\nimport { Spinner } from \"../spinner/spinner.component\";\r\nimport \"./form.styles.scss\";\r\n\r\ninterface IForm {\r\n  handleSubmit: (event: FormEvent<HTMLFormElement>) => void;\r\n  title: string;\r\n  projectName?: string;\r\n  buttonLabel: string;\r\n  isLoading?: boolean;\r\n  emoji?: string;\r\n  [x: string]: any;\r\n}\r\n\r\nexport const Form: FC<IForm> = ({\r\n  children,\r\n  handleSubmit,\r\n  isLoading = false,\r\n  title,\r\n  projectName,\r\n  buttonLabel,\r\n  emoji,\r\n}) => {\r\n  return (\r\n    <div className=\"form-component-wrapper\">\r\n      <h1>\r\n        {title} {emoji}\r\n      </h1>\r\n      {projectName &&\r\n        <div className=\"task-modal-project-name\">{\"Project: \" + projectName}</div>\r\n      }\r\n      <form onSubmit={(e) => handleSubmit(e)}>\r\n        <div className=\"children\">{children}</div>\r\n        <div className=\"submit-button\">\r\n          <button type=\"submit\">\r\n            {!isLoading ? buttonLabel : \"Loading...\"}{\" \"}\r\n            <Spinner isLoading={isLoading} />\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n","import { ChangeEvent, FC, Fragment } from \"react\";\r\nimport \"./input.styles.scss\";\r\n\r\ninterface IInput {\r\n  handleChange: (\r\n    event:\r\n      | ChangeEvent<HTMLInputElement>\r\n      | ChangeEvent<HTMLSelectElement>\r\n      | ChangeEvent<HTMLTextAreaElement>\r\n  ) => void;\r\n  label: string;\r\n  type: string;\r\n  emoji?: string;\r\n  [x: string]: any;\r\n}\r\n\r\nexport const Input: FC<IInput> = ({\r\n  handleChange,\r\n  label,\r\n  type,\r\n  emoji,\r\n  ...otherProps\r\n}) => {\r\n  return (\r\n    <Fragment>\r\n      <div className=\"input-component-wrapper\">\r\n        <label>\r\n          <p>\r\n            {emoji} {label}\r\n          </p>\r\n          <input type={type} {...otherProps} onChange={handleChange} />\r\n        </label>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n","import { ChangeEvent, FormEvent, useContext, useState } from \"react\";\r\nimport { Form } from \"../../components/form/form.component\";\r\nimport { Input } from \"../../components/input/input.component\";\r\nimport { AuthContext } from \"../../context/auth/auth.context\";\r\nimport \"./signin.styles.scss\";\r\n\r\nexport const SignIn = () => {\r\n  const { signInWithEmailAndPassword } = useContext(AuthContext);\r\n\r\n  const [signInState, setSignInState] = useState<{\r\n    email: string;\r\n    password: string;\r\n  }>({ email: \"\", password: \"\" });\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const handleChange = (\r\n    event:\r\n      | ChangeEvent<HTMLInputElement>\r\n      | ChangeEvent<HTMLSelectElement>\r\n      | ChangeEvent<HTMLTextAreaElement>\r\n  ) => {\r\n    const { value, name } = event.target;\r\n    setSignInState({ ...signInState, [name]: value });\r\n  };\r\n\r\n  const handleFormSubmit = async (event: FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n\r\n    const { email, password } = signInState;\r\n\r\n    setIsLoading(true);\r\n    await signInWithEmailAndPassword(email, password)\r\n      .then((res) => {\r\n        console.log(res);\r\n      })\r\n      .catch(() => {\r\n        setIsLoading(false);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"signin-component\">\r\n      <Form\r\n        title=\"Please Log In\"\r\n        emoji=\"🦧\"\r\n        buttonLabel=\"Log In\"\r\n        handleSubmit={handleFormSubmit}\r\n        isLoading={isLoading}\r\n      >\r\n        <Input\r\n          name=\"email\"\r\n          label=\"Email\"\r\n          type=\"text\"\r\n          placeholder=\"Enter email\"\r\n          emoji=\"📧\"\r\n          required\r\n          handleChange={handleChange}\r\n        />\r\n        <Input\r\n          name=\"password\"\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          placeholder=\"Enter password\"\r\n          emoji=\"🙈\"\r\n          required\r\n          handleChange={handleChange}\r\n        />\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n","import { ChangeEvent, FormEvent, useContext, useState } from \"react\";\r\nimport { Form } from \"../../components/form/form.component\";\r\nimport { Input } from \"../../components/input/input.component\";\r\nimport { AuthContext } from \"../../context/auth/auth.context\";\r\nimport \"./signup.styles.scss\";\r\n\r\nexport const SignUp = () => {\r\n  const { signUpWithEmailAndPassword } = useContext(AuthContext);\r\n\r\n  const [signUpState, setSignUpState] = useState<{\r\n    firstName: string;\r\n    lastName: string;\r\n    email: string;\r\n    password: string;\r\n  }>({ firstName: \"\", lastName: \"\", email: \"\", password: \"\" });\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const handleChange = (\r\n    event:\r\n      | ChangeEvent<HTMLInputElement>\r\n      | ChangeEvent<HTMLSelectElement>\r\n      | ChangeEvent<HTMLTextAreaElement>\r\n  ) => {\r\n    const { value, name } = event.target;\r\n    setSignUpState({ ...signUpState, [name]: value });\r\n  };\r\n\r\n  const handleFormSubmit = async (event: FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n\r\n    const { firstName, lastName, email, password } = signUpState;\r\n\r\n    setIsLoading(true);\r\n    await signUpWithEmailAndPassword(firstName, lastName, email, password)\r\n      .then((res) => {\r\n        console.log(res);\r\n      })\r\n      .catch(() => {\r\n        setIsLoading(false);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"signup-component\">\r\n      <Form\r\n        title=\"Please Sign Up\"\r\n        emoji=\"🐒\"\r\n        buttonLabel=\"Sign Up\"\r\n        handleSubmit={handleFormSubmit}\r\n        isLoading={isLoading}\r\n      >\r\n        <Input\r\n          name=\"firstName\"\r\n          label=\"First Name\"\r\n          type=\"text\"\r\n          placeholder=\"Enter first name\"\r\n          emoji=\"🙉\"\r\n          required\r\n          handleChange={handleChange}\r\n        />\r\n        <Input\r\n          name=\"lastName\"\r\n          label=\"Last Name\"\r\n          type=\"text\"\r\n          placeholder=\"Enter last name\"\r\n          emoji=\"🙊\"\r\n          required\r\n          handleChange={handleChange}\r\n        />\r\n        <Input\r\n          name=\"email\"\r\n          label=\"Email\"\r\n          type=\"text\"\r\n          placeholder=\"Enter email\"\r\n          emoji=\"📧\"\r\n          required\r\n          handleChange={handleChange}\r\n        />\r\n        <Input\r\n          name=\"password\"\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          placeholder=\"Enter password\"\r\n          emoji=\"🙈\"\r\n          required\r\n          handleChange={handleChange}\r\n        />\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n","import { useState } from \"react\";\r\nimport { SignIn } from \"../../components/signin/signin.component\";\r\nimport { SignUp } from \"../../components/signup/signup.component\";\r\nimport \"./signin-signup.styles.scss\";\r\n\r\nexport const SignInSignUpPage = () => {\r\n  const [isSigningIn, setIsSigningIn] = useState(true);\r\n\r\n  return (\r\n    <div className=\"signin-signup-page\">\r\n      {isSigningIn ? <SignIn /> : <SignUp />}\r\n      <p\r\n        className=\"need-an-account\"\r\n        onClick={() => setIsSigningIn(!isSigningIn)}\r\n      >\r\n        {isSigningIn ? \"Don't have an account?\" : \"Already have an account?\"}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n","import { useState, useEffect } from \"react\";\r\n\r\nconst getWindowDimensions = () => {\r\n  const { innerWidth: width, innerHeight: height } = window;\r\n  return {\r\n    width,\r\n    height,\r\n  };\r\n};\r\n\r\nexport const useWindowDimensions = () => {\r\n  const [windowDimensions, setWindowDimensions] = useState(\r\n    getWindowDimensions()\r\n  );\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWindowDimensions(getWindowDimensions());\r\n    }\r\n\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []);\r\n\r\n  return windowDimensions;\r\n};\r\n","import { Task } from \"./task\";\r\nimport { User } from \"./user\";\r\n\r\nexport class Project {\r\n  id: string;\r\n  title: string;\r\n  description: string;\r\n  members: User[] | null;\r\n  tasks: Task[] | null;\r\n  created: string | null;\r\n\r\n  constructor(\r\n    id: string,\r\n    title: string,\r\n    description: string,\r\n    members: User[] | null,\r\n    tasks: Task[] | null,\r\n    created: string | null\r\n  ) {\r\n    this.id = id;\r\n    this.title = title;\r\n    this.description = description;\r\n    this.members = members;\r\n    this.tasks = tasks;\r\n    this.created = created;\r\n  }\r\n}\r\n","import { User } from \"./user\";\r\n\r\nexport class Task {\r\n  id: string;\r\n  projectID: string;\r\n  title: string;\r\n  description: string;\r\n  due_date: string;\r\n  assigned_to: User[] | null | undefined;\r\n  created: string | null;\r\n\r\n  constructor(\r\n    id: string,\r\n    projectID: string,\r\n    title: string,\r\n    description: string,\r\n    dueDate: string,\r\n    assigned_to: User[] | null | undefined,\r\n    created: string | null\r\n  ) {\r\n    this.id = id;\r\n    this.projectID = projectID;\r\n    this.title = title;\r\n    this.description = description;\r\n    this.created = created;\r\n    this.due_date = dueDate;\r\n    this.assigned_to = assigned_to;\r\n  }\r\n}\r\n","import axios from \"axios\";\r\nimport {\r\n  FC,\r\n  createContext,\r\n  useState,\r\n  useContext,\r\n  useEffect,\r\n  useCallback,\r\n} from \"react\";\r\nimport { Project } from \"../../models/project\";\r\nimport { Task } from \"../../models/task\";\r\nimport { User } from \"../../models/user\";\r\nimport { StoreContextType } from \"../../types/store-context\";\r\nimport { AuthContext } from \"../auth/auth.context\";\r\n\r\nimport { host } from \"../../utils/env\";\r\nimport { ToastContext } from \"../toast/toast.context\";\r\n\r\nconst StoreContext = createContext<StoreContextType>({\r\n  projects: null,\r\n  workingProject: null,\r\n  assignedTasks: null,\r\n  getASingleProject: async (id: string) => \"\",\r\n  createAProject: async (title: string, description: string) => \"\",\r\n  deleteAProject: async (id: string) => \"\",\r\n  updateAProject: async (id: string, title?: string, description?: string) =>\r\n    \"\",\r\n  createATask: async (\r\n    projectId: string,\r\n    title: string,\r\n    description: string,\r\n    dueDate?: string\r\n  ) => \"\",\r\n  updateATask: async (\r\n    taskId: string,\r\n    projectId: string,\r\n    title: string,\r\n    description: string,\r\n    dueDate?: string\r\n  ) => \"\",\r\n  deleteATask: async (ttaskId: string, projectId: string) => \"\",\r\n  addMemberToAProject: async (projectId: string, memberEmail: string) => \"\",\r\n  deleteMemberFromAProject: async (projectId: string, memberEmail: string) =>\r\n    \"\",\r\n  addMemberToAProjectTask: async (\r\n    taskId: string,\r\n    projectId: string,\r\n    memberEmail: string\r\n  ) => \"\",\r\n  deleteMemberFromAProjectTask: async (\r\n    taskId: string,\r\n    projectId: string,\r\n    memberEmail: string\r\n  ) => \"\",\r\n});\r\n\r\nconst StoreProvider: FC = ({ children }) => {\r\n  const { token } = useContext(AuthContext);\r\n  const [projects, setProjects] = useState<Project[] | null>(null);\r\n  const [workingProject, setWorkingProject] = useState<Project | null>(null);\r\n  const [assignedTasks, setAssignedTasks] = useState<Task[] | null>(null);\r\n  const { notify } = useContext(ToastContext);\r\n\r\n  /**\r\n   * Gets all projects for the currently authenticated user. Called from\r\n   * within the provider only.\r\n   * @private\r\n   * @returns Promise of success or failure\r\n   */\r\n  const getAllProjects = useCallback(\r\n    (): Promise<string> =>\r\n      new Promise((resolve, reject) => {\r\n        axios({\r\n          method: \"get\",\r\n          url: host + \"/projects\",\r\n          headers: {\r\n            authorization: token,\r\n          },\r\n        })\r\n          .then((res: any) => {\r\n            let receivedProjects = new Array<Project>();\r\n\r\n            for (let index = 0; index < res.data.projects.length; index++) {\r\n              const proj = res.data.projects[index];\r\n\r\n              receivedProjects.push(\r\n                new Project(\r\n                  proj.id,\r\n                  proj.title,\r\n                  proj.description,\r\n                  proj.members,\r\n                  proj.tasks,\r\n                  proj.created\r\n                )\r\n              );\r\n            }\r\n            setProjects(receivedProjects);\r\n          })\r\n          .then(() => {\r\n            resolve(\"Projects Received\");\r\n          })\r\n          .catch((err) => {\r\n            notify(err.message, \"error\");\r\n            reject(err);\r\n          });\r\n      }),\r\n    [token, notify]\r\n  );\r\n\r\n  /**\r\n   * Gets a single project based off it's id, if the user is authenticated.\r\n   * @public\r\n   * @param id The id of the post to fetch.\r\n   * @returns Promise of success or failure\r\n   */\r\n  const getASingleProject = (id: string): Promise<string> =>\r\n    new Promise((resolve, reject) => {\r\n      axios({\r\n        method: \"get\",\r\n        url: host + \"/projects/\" + id,\r\n        headers: {\r\n          authorization: token,\r\n        },\r\n      })\r\n        .then((res: any) => {\r\n          const memberList: User[] = [...res.data.project.members];\r\n          const taskList: Task[] = [...res.data.project.tasks];\r\n\r\n          setWorkingProject(\r\n            new Project(\r\n              res.data.project.id,\r\n              res.data.project.title,\r\n              res.data.project.description,\r\n              memberList,\r\n              taskList,\r\n              res.data.project.created\r\n            )\r\n          );\r\n        })\r\n        .then(() => {\r\n          resolve(\"Project Details Received\");\r\n        })\r\n        .catch((err) => {\r\n          notify(err.message, \"error\");\r\n          reject(err);\r\n        });\r\n    });\r\n\r\n  /**\r\n   * Creates a new project associated with the currently logged in user.\r\n   * @public\r\n   * @param title The title of the new post.\r\n   * @param description The description of the new post.\r\n   * @returns Promise of success or failure\r\n   */\r\n  const createAProject = (\r\n    title: string,\r\n    description: string\r\n  ): Promise<string> =>\r\n    new Promise((resolve, reject) => {\r\n      axios({\r\n        method: \"post\",\r\n        url: host + \"/projects\",\r\n        headers: {\r\n          authorization: token,\r\n        },\r\n        data: {\r\n          title: title,\r\n          description: description,\r\n        },\r\n      })\r\n        .then((res: any) => {\r\n          if (projects) {\r\n            setProjects([\r\n              ...projects,\r\n              new Project(\r\n                res.data.project.id,\r\n                res.data.project.title,\r\n                res.data.project.description,\r\n                new Array<User>(),\r\n                new Array<Task>(),\r\n                null\r\n              ),\r\n            ]);\r\n          } else {\r\n            setProjects(\r\n              new Array<Project>(\r\n                new Project(\r\n                  res.data.project.id,\r\n                  res.data.project.title,\r\n                  res.data.project.description,\r\n                  new Array<User>(),\r\n                  new Array<Task>(),\r\n                  null\r\n                )\r\n              )\r\n            );\r\n          }\r\n        })\r\n        .then(async () => {\r\n          await getAllProjects();\r\n        })\r\n        .then(() => {\r\n          notify(\"Project Created\");\r\n          resolve(\"Project Created\");\r\n        })\r\n        .catch((err) => {\r\n          notify(err.message, \"error\");\r\n          reject(err);\r\n        });\r\n    });\r\n\r\n  /**\r\n   * Deletes a specific project from list\r\n   * @public\r\n   * @param id ID of selected project\r\n   * @returns Promise of success or failuer\r\n   */\r\n  const deleteAProject = (id: string): Promise<string> =>\r\n    new Promise((resolve, reject) => {\r\n      axios({\r\n        method: \"delete\",\r\n        url: host + \"/projects/\" + id,\r\n        headers: {\r\n          authorization: token,\r\n        },\r\n      })\r\n        .then(async () => {\r\n          await getAllProjects();\r\n        })\r\n        .then(() => {\r\n          notify(\"Project Deleted\");\r\n          resolve(\"Deleted Project\");\r\n        })\r\n        .catch((err) => {\r\n          notify(err.message, \"error\");\r\n          reject(err);\r\n        });\r\n    });\r\n\r\n  /**\r\n   * Updates a single project title and/or description based on a project id, if a user\r\n   * is currently authenticated.\r\n   * @public\r\n   * @param id The id of the project to be updated.\r\n   * @param title Optional - the new title value.\r\n   * @param description Optional - the new description.\r\n   * @returns Promise of success or failure.\r\n   */\r\n  const updateAProject = (\r\n    id: string,\r\n    title?: string,\r\n    description?: string\r\n  ): Promise<string> =>\r\n    new Promise((resolve, reject) => {\r\n      if (!title && !description) {\r\n        reject(\"No values provided to title and description\");\r\n      }\r\n\r\n      let data: any = {};\r\n\r\n      if (title && description) {\r\n        data = { title: title, description: description };\r\n      } else if (!title && description) {\r\n        data = { description: description };\r\n      } else if (!description && title) {\r\n        data = { title: title };\r\n      }\r\n\r\n      axios({\r\n        method: \"put\",\r\n        url: host + \"/projects/\" + id,\r\n        headers: {\r\n          authorization: token,\r\n        },\r\n        data,\r\n      })\r\n        .then((res: any) => {\r\n          const receivedProject = new Project(\r\n            res.data.project.id,\r\n            res.data.project.title,\r\n            res.data.project.description,\r\n            res.data.project.members,\r\n            res.data.project.tasks,\r\n            res.data.project.created\r\n          );\r\n          setWorkingProject(receivedProject);\r\n        })\r\n        .then(async () => {\r\n          await getASingleProject(id);\r\n        })\r\n        .then(async () => {\r\n          await getAllProjects();\r\n        })\r\n        .then(() => {\r\n          notify(\"Project Updated\");\r\n          resolve(\"Updated Project\");\r\n        })\r\n        .catch((err) => {\r\n          notify(err.message, \"error\");\r\n          reject(err);\r\n        });\r\n    });\r\n\r\n  /**\r\n   * Adds a new member to a specified project, if the user is authenticated.\r\n   * @public\r\n   * @param projectId ID of selected project\r\n   * @param memberEmail The email of the invited member.\r\n   * @returns Promise of success or failuer\r\n   */\r\n  const addMemberToAProject = (\r\n    projectId: string,\r\n    memberEmail: string\r\n  ): Promise<string> =>\r\n    new Promise((resolve, reject) => {\r\n      if (!projectId || !memberEmail) {\r\n        reject(\"A project ID and an email must be provided\");\r\n      }\r\n      axios({\r\n        method: \"post\",\r\n        url: host + `/projects/${projectId}/members`,\r\n        headers: {\r\n          authorization: token,\r\n        },\r\n        data: {\r\n          email: memberEmail,\r\n        },\r\n      })\r\n        .then(async () => {\r\n          await getASingleProject(projectId);\r\n        })\r\n        .then(() => {\r\n          notify(\"Member Added To Project\");\r\n          resolve(\"Member Added To Project\");\r\n        })\r\n        .catch((err) => {\r\n          notify(err.message, \"error\");\r\n          reject(err);\r\n        });\r\n    });\r\n\r\n  /**\r\n   * Adds a new member to a specified project, if the user is authenticated.\r\n   * @public\r\n   * @param projectId ID of selected project\r\n   * @param memberEmail The email of the invited member.\r\n   * @returns Promise of success or failuer\r\n   */\r\n  const deleteMemberFromAProject = (\r\n    projectId: string,\r\n    memberEmail: string\r\n  ): Promise<string> =>\r\n    new Promise((resolve, reject) => {\r\n      if (!projectId || !memberEmail) {\r\n        reject(\"A project ID and an email must be provided\");\r\n      }\r\n      axios({\r\n        method: \"delete\",\r\n        url: host + `/projects/${projectId}/members`,\r\n        headers: {\r\n          authorization: token,\r\n        },\r\n        data: {\r\n          email: memberEmail,\r\n        },\r\n      })\r\n        .then(async () => {\r\n          await getASingleProject(projectId);\r\n        })\r\n        .then(() => {\r\n          notify(\"Member Deleted From Project\");\r\n          resolve(\"Member Deleted From Project\");\r\n        })\r\n        .catch((err) => {\r\n          notify(err.message, \"error\");\r\n          reject(err);\r\n        });\r\n    });\r\n\r\n  //!!---------------!!//\r\n  //!! TASKS SECTION !!//\r\n  //!!---------------!!//\r\n\r\n  /**\r\n   * Gets all tasks for the currently authenticated user. Called from\r\n   * within the provider only.\r\n   * @private\r\n   * @returns Promise of success or failure\r\n   */\r\n  const getAllTasksAssignedToAUser = useCallback(async () => {\r\n    await axios({\r\n      method: \"get\",\r\n      url: host + \"/tasks\",\r\n      headers: {\r\n        authorization: token,\r\n      },\r\n    })\r\n      .then((res: any) => {\r\n        let receivedTasks = new Array<Task>();\r\n\r\n        for (let index = 0; index < res.data.tasks.length; index++) {\r\n          const task = res.data.tasks[index];\r\n\r\n          receivedTasks.push(\r\n            new Task(\r\n              task.task_id,\r\n              task.project_id,\r\n              task.title,\r\n              task.description,\r\n              task.due_date,\r\n              task.assigned_To,\r\n              task.created\r\n            )\r\n          );\r\n        }\r\n        setAssignedTasks(receivedTasks);\r\n      })\r\n      .then(() => {\r\n        return true;\r\n      })\r\n      .catch((err) => {\r\n        notify(err.message, \"error\");\r\n        console.log(err);\r\n        return false;\r\n      });\r\n  }, [token, notify]);\r\n\r\n  /**\r\n   * Creates a new task associated with a specified project.\r\n   * @public\r\n   * @param title The title of the new post.\r\n   * @param description The description of the new post.\r\n   * @returns Promise of success or failure\r\n   */\r\n  const createATask = (\r\n    projectId: string,\r\n    title: string,\r\n    description: string,\r\n    dueDate?: string\r\n  ): Promise<string> =>\r\n    new Promise((resolve, reject) => {\r\n      if (!projectId && !title && !description && !dueDate) {\r\n        reject(\r\n          \"No values provided to projectId, title, description, or due date\"\r\n        );\r\n      }\r\n      if (!projectId || !title || !description) {\r\n        reject(\"A projectId, title, and description must be provided\");\r\n      }\r\n\r\n      let data: any = {};\r\n      if (!dueDate) {\r\n        data = { title: title, description: description };\r\n      } else {\r\n        data = { title: title, description: description, due_date: dueDate };\r\n      }\r\n\r\n      axios({\r\n        method: \"post\",\r\n        url: host + `/projects/${projectId}/tasks`,\r\n        headers: {\r\n          authorization: token,\r\n        },\r\n        data,\r\n      })\r\n        .then(async (res: any) => {\r\n          await getAllTasksAssignedToAUser();\r\n        })\r\n        .then(async () => {\r\n          await getASingleProject(projectId);\r\n        })\r\n        .then(() => {\r\n          notify(\"Task Created\");\r\n          resolve(\"Task Created\");\r\n        })\r\n        .catch((err) => {\r\n          notify(err.message, \"error\");\r\n          reject(err);\r\n        });\r\n    });\r\n\r\n  /**\r\n   * Updates a specific task from a specified project, if the user to authenticated.\r\n   * @public\r\n   * @param taskId The task to be updated.\r\n   * @param projectId The project that contains the task.\r\n   * @param title Optional - The new title for the task.\r\n   * @param description Optional - The new description for the task.\r\n   * @param dueDate Optional - The new due date for the task.\r\n   * @returns Promise of success or failure\r\n   */\r\n  const updateATask = (\r\n    taskId: string,\r\n    projectId: string,\r\n    title: string,\r\n    description: string,\r\n    dueDate?: string\r\n  ): Promise<string> =>\r\n    new Promise((resolve, reject) => {\r\n      if (!title && !description && !dueDate) {\r\n        reject(\"No values provided to title, description, or due date\");\r\n      }\r\n\r\n      let data: any = {};\r\n\r\n      if (title && description && dueDate) {\r\n        data = { title: title, description: description, due_date: dueDate };\r\n      } else if (!title && description && dueDate) {\r\n        data = { description: description, due_date: dueDate };\r\n      } else if (!description && title && dueDate) {\r\n        data = { title: title, due_date: dueDate };\r\n      } else if (!description && !title && dueDate) {\r\n        data = { due_date: dueDate };\r\n      } else if (!description && !title && dueDate) {\r\n        data = { due_date: dueDate };\r\n      } else if (!description && title && !dueDate) {\r\n        data = { title: title };\r\n      } else if (description && !title && !dueDate) {\r\n        data = { description: description };\r\n      }\r\n\r\n      axios({\r\n        method: \"put\",\r\n        url: host + `/projects/${projectId}/tasks/${taskId}`,\r\n        headers: {\r\n          authorization: token,\r\n        },\r\n        data,\r\n      })\r\n        .then(async () => {\r\n          await getASingleProject(projectId);\r\n        })\r\n        .then(() => {\r\n          notify(\"Task Updated\");\r\n          resolve(\"Task Updated\");\r\n        })\r\n        .catch((err) => {\r\n          notify(err.message, \"error\");\r\n          reject(err);\r\n        });\r\n    });\r\n\r\n  /**\r\n   * Deletes a specific task from a specified project, if the user to authenticated.\r\n   * @public\r\n   * @param taskId The task to be deleeted.\r\n   * @param projectId The project that contains the task.\r\n   * @returns Promise of success or failure\r\n   */\r\n  const deleteATask = (taskId: string, projectId: string): Promise<string> =>\r\n    new Promise((resolve, reject) => {\r\n      console.log(\"deleting task...\");\r\n      axios({\r\n        method: \"delete\",\r\n        url: host + `/projects/${projectId}/tasks/${taskId}`,\r\n        headers: {\r\n          authorization: token,\r\n        },\r\n      })\r\n        .then(async () => {\r\n          await getASingleProject(projectId);\r\n        })\r\n        .then(() => {\r\n          notify(\"Task Deleted\");\r\n          resolve(\"Task Deleted\");\r\n        })\r\n        .catch((err) => {\r\n          notify(err.message, \"error\");\r\n          reject(err);\r\n        });\r\n    });\r\n\r\n  /**\r\n   * Adds a new member to a specified project, if the user is authenticated.\r\n   * @public\r\n   * @param projectId ID of selected project\r\n   * @param memberEmail The email of the invited member.\r\n   * @returns Promise of success or failure\r\n   */\r\n  const addMemberToAProjectTask = (\r\n    taskId: string,\r\n    projectId: string,\r\n    memberEmail: string\r\n  ): Promise<string> =>\r\n    new Promise((resolve, reject) => {\r\n      if (!projectId || !memberEmail) {\r\n        reject(\"A task ID, project ID and an email must be provided\");\r\n      }\r\n\r\n      axios({\r\n        method: \"post\",\r\n        url: host + `/projects/${projectId}/tasks/${taskId}/assigned`,\r\n        headers: {\r\n          authorization: token,\r\n        },\r\n        data: {\r\n          email: memberEmail,\r\n        },\r\n      })\r\n        .then(async () => {\r\n          await getASingleProject(projectId);\r\n        })\r\n        .then(() => {\r\n          notify(\"Member Added To Project Task\");\r\n          resolve(\"Member Added To Project Task\");\r\n        })\r\n        .catch((err) => {\r\n          notify(err.message, \"error\");\r\n          reject(err);\r\n        });\r\n    });\r\n\r\n  /**\r\n   * Adds a new member to a specified project, if the user is authenticated.\r\n   * @public\r\n   * @param projectId ID of selected project\r\n   * @param memberEmail The email of the invited member.\r\n   * @returns Promise of success or failuer\r\n   */\r\n  const deleteMemberFromAProjectTask = (\r\n    taskId: string,\r\n    projectId: string,\r\n    memberEmail: string\r\n  ): Promise<string> =>\r\n    new Promise((resolve, reject) => {\r\n      if (!projectId || !memberEmail) {\r\n        reject(\"A task ID, project ID and an email must be provided\");\r\n      }\r\n      axios({\r\n        method: \"delete\",\r\n        url: host + `/projects/${projectId}/tasks/${taskId}/assigned`,\r\n        headers: {\r\n          authorization: token,\r\n        },\r\n        data: {\r\n          email: memberEmail,\r\n        },\r\n      })\r\n        .then(async () => {\r\n          await getASingleProject(projectId);\r\n        })\r\n        .then(() => {\r\n          notify(\"Member Deleted From Project Task\");\r\n          resolve(\"Member Deleted From Project Task\");\r\n        })\r\n        .catch((err) => {\r\n          notify(err.message, \"error\");\r\n          reject(err);\r\n        });\r\n    });\r\n\r\n  //**----------------**//\r\n  //** GLOBAL SECTION **//\r\n  //**----------------**//\r\n\r\n  useEffect(() => {\r\n    if (token) {\r\n      getAllProjects();\r\n      getAllTasksAssignedToAUser();\r\n    }\r\n  }, [getAllProjects, getAllTasksAssignedToAUser, token]);\r\n\r\n  useEffect(() => {\r\n    if (token) {\r\n      getAllTasksAssignedToAUser();\r\n    }\r\n  }, [workingProject, getAllTasksAssignedToAUser, token]);\r\n  return (\r\n    <StoreContext.Provider\r\n      value={{\r\n        projects,\r\n        workingProject,\r\n        assignedTasks,\r\n        getASingleProject,\r\n        createAProject,\r\n        deleteAProject,\r\n        updateAProject,\r\n        createATask,\r\n        deleteATask,\r\n        updateATask,\r\n        addMemberToAProject,\r\n        deleteMemberFromAProject,\r\n        addMemberToAProjectTask,\r\n        deleteMemberFromAProjectTask,\r\n      }}\r\n    >\r\n      {children}\r\n    </StoreContext.Provider>\r\n  );\r\n};\r\n\r\nexport { StoreProvider, StoreContext };\r\n","import { FC, useContext } from \"react\";\nimport { useLocation, useHistory } from \"react-router-dom\";\nimport { StoreContext } from \"../../../context/store/store.context\";\nimport \"./link-block.styles.scss\";\n\ninterface ILinkBlock {\n  text: string;\n  urlPath: string;\n}\n\nexport const LinkBlock: FC<ILinkBlock> = ({ text, urlPath }) => {\n  const location = useLocation();\n  const history = useHistory();\n  const { assignedTasks } = useContext(StoreContext);\n\n  return (\n    <div\n      className={`link-block-component ${\n        location.pathname === urlPath ? \"selected\" : \"not-selected\"\n      } `}\n      onClick={() => history.push(urlPath)}\n    >\n      <p>{text}</p>\n      {text === \"📖  Tasks\" && assignedTasks && assignedTasks.length > 0 && (\n        <div className=\"floating-todo-number-position\">\n          <div className=\"floating-todo-number\">\n            <span>{assignedTasks?.length}</span>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import { useContext } from \"react\";\r\nimport { AuthContext } from \"../../../context/auth/auth.context\";\r\nimport \"./user-details-block.styles.scss\";\r\n\r\nexport const UserDetailsBlock = () => {\r\n  const { user } = useContext(AuthContext);\r\n\r\n  return (\r\n    <div className=\"user-details-block-component\">\r\n      <div className=\"avatar\">\r\n        <p>{user ? user.firstName[0] + user.lastName[0] : \"\"}</p>\r\n      </div>\r\n      <div className=\"user-details\">\r\n        <p className=\"name\">\r\n          {user ? user.firstName + \" \" + user.lastName : \"Hey Friend!\"}\r\n        </p>\r\n        <p className=\"email\">{user ? user.email : \"No email found\"}</p>\r\n        {/* <p className=\"profile-link\">view profile</p> */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { FC, Fragment, useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useWindowDimensions } from \"../../hooks/useWindowDimensions\";\nimport { LinkBlock } from \"./link-block/link-block.component\";\nimport \"./sidebar.styles.scss\";\nimport { UserDetailsBlock } from \"./user-details-block/user-details-block.component\";\n\ninterface ISidebar {\n  title?: string;\n}\n\nexport const Sidebar: FC<ISidebar> = ({ title }) => {\n  const { width } = useWindowDimensions();\n  const [menuIsOpen, setMenuIsOpen] = useState(false);\n  const history = useHistory();\n\n  useEffect(() => {\n    if (width <= 768) {\n      setMenuIsOpen(false);\n    }\n  }, [width]);\n\n  const SidebarContent = () => (\n    <Fragment>\n      <h2 className=\"sidebar-title\" onClick={() => history.push(\"/\")}>\n        {!title ? \"🐵 Projects\" : title}\n      </h2>\n      <UserDetailsBlock />\n      <div className=\"link-blocks\">\n        <LinkBlock text=\"📓  Projects\" urlPath=\"/\" />\n        <LinkBlock text=\"📖  Your Tasks\" urlPath=\"/tasks\" />\n      </div>\n    </Fragment>\n  );\n\n  if (width <= 768) {\n    return (\n      <>\n        <div\n          className={`nav-icon ${menuIsOpen ? \"menu-open\" : \"menu-closed\"}`}\n          onClick={() => setMenuIsOpen(!menuIsOpen)}\n        >\n          <div></div>\n        </div>\n        <aside\n          className={`sidebar-component ${\n            menuIsOpen ? \"menu-open\" : \"menu-closed\"\n          }`}\n        >\n          <SidebarContent />\n        </aside>\n      </>\n    );\n  } else {\n    return (\n      <aside className=\"sidebar-component\">\n        <SidebarContent />\n      </aside>\n    );\n  }\n};\n","import { FC, MouseEventHandler } from \"react\";\nimport {\n  FontAwesomeIcon,\n  FontAwesomeIconProps,\n} from \"@fortawesome/react-fontawesome\";\n\nimport \"./fab.styles.scss\";\n\ninterface IFab {\n  onClick: MouseEventHandler<HTMLDivElement>;\n  icon: FontAwesomeIconProps | any;\n  text?: string;\n  shape?: \"circle\" | \"pill\";\n}\n\nexport const Fab: FC<IFab> = ({ onClick, icon, text, shape = \"circle\" }) => {\n  return (\n    <div\n      className={text || shape === \"pill\" ? `fab-button pill` : `fab-button`}\n      onClick={(e) => onClick(e)}\n    >\n      {text ? (\n        <>\n          <FontAwesomeIcon icon={icon} />\n          {text}\n        </>\n      ) : (\n        <FontAwesomeIcon icon={icon} />\n      )}\n    </div>\n  );\n};\n","import { FC } from \"react\";\r\n\r\nimport \"./tooltip.styles.scss\";\r\n\r\nexport const Tooltip: FC<{\r\n  text: string | null | undefined | string[][];\r\n  position?: \"top\" | \"bottom\" | \"right\" | \"left\";\r\n}> = ({ children, text, position = \"top\" }) => {\r\n  return (\r\n    <div className=\"tooltip-component\">\r\n      <span className={`tooltiptext ${position}`}>{text}</span>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n","import { FC, Fragment, MouseEventHandler, useContext } from \"react\";\r\nimport { Tooltip } from \"../tooltip/tooltip.component\";\r\nimport { StoreContext } from \"../../context/store/store.context\";\r\nimport \"./card.styles.scss\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\ninterface ICard {\r\n  type?: string;\r\n  id: string;\r\n  secondaryId?: string;\r\n  title: string;\r\n  line1: string | null;\r\n  line2: string;\r\n  line3?: string;\r\n  cardClick?: MouseEventHandler<HTMLDivElement> | undefined;\r\n  addMembersClick?: (type: string, id?: string) => void | undefined;\r\n  editTaskClick?: (\r\n    type: string,\r\n    taskID: string,\r\n    title: string,\r\n    due_Date: string,\r\n    description: string\r\n  ) => void | undefined;\r\n}\r\n\r\nexport const Card: FC<ICard> = ({\r\n  id,\r\n  secondaryId = \"0\",\r\n  type,\r\n  title,\r\n  line1,\r\n  line2,\r\n  line3,\r\n  cardClick,\r\n  addMembersClick,\r\n  editTaskClick,\r\n}) => {\r\n  const { workingProject, deleteAProject, deleteATask } = useContext(\r\n    StoreContext\r\n  );\r\n\r\n  return (\r\n    <div\r\n      className={`card-component-wrapper ${\r\n        type === \"project\" ? \"project\" : \"task\"\r\n      }`}\r\n    >\r\n      <div\r\n        className={`card-info ${type === \"project\" ? \"\" : \"task\"}`}\r\n        onClick={type === \"project\" ? cardClick : () => void \"\"}\r\n      >\r\n        <h3 className=\"title\">{title}</h3>\r\n        <div className=\"date\">\r\n          {type === \"task\"\r\n            ? \"Start: \" + line1?.substring(0, 10)\r\n            : \"Started: \" + line1?.substring(0, 10)}\r\n        </div>\r\n        <div className=\"date\">\r\n          End: {type === \"task\" && line2 !== undefined && line2}\r\n          {type === \"task\" && line2 === \"\" && \"♾️\"}\r\n        </div>\r\n        <p className=\"description\">\r\n          {type === \"project\" && line2}\r\n          {type === \"task\" && line3 && line3}\r\n        </p>\r\n\r\n        {type === \"task\" && workingProject?.tasks && (\r\n          <div className=\"assigned-members-wrapper\">\r\n            <Tooltip\r\n              text={\r\n                workingProject.tasks &&\r\n                workingProject.tasks\r\n                  .filter((taskId) => taskId.id === id)\r\n                  .map((task) => {\r\n                    let text: string[] = [];\r\n                    if (task.assigned_to && task.assigned_to.length > 0) {\r\n                      task.assigned_to?.forEach((member) => {\r\n                        text.push(\r\n                          member.firstName + \" \" + member.lastName + \"\\n\"\r\n                        );\r\n                      });\r\n                    } else {\r\n                      text.push(\"No members assigned\");\r\n                    }\r\n                    return text;\r\n                  })\r\n              }\r\n            >\r\n              <div className=\"assigned-members\">\r\n                {workingProject.tasks &&\r\n                  workingProject.tasks\r\n                    .filter((taskId) => taskId.id === id)\r\n                    .map((task) => {\r\n                      if (task.assigned_to && task.assigned_to.length > 0) {\r\n                        return \"Members assigned \" + task.assigned_to.length;\r\n                      } else {\r\n                        return \"No members assigned\";\r\n                      }\r\n                    })}\r\n              </div>\r\n            </Tooltip>\r\n\r\n            <div className=\"assigned-members\">\r\n              {addMembersClick && (\r\n                <Tooltip text=\"Assign a member to task\">\r\n                  <button onClick={() => addMembersClick(\"member\", id)}>\r\n                    <FontAwesomeIcon icon={faPlus} />\r\n                  </button>\r\n                </Tooltip>\r\n              )}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"card-button-wrapper\">\r\n        {type === \"task\" && (\r\n          <Fragment>\r\n            {editTaskClick && line3 && (\r\n              <button\r\n                onClick={() =>\r\n                  editTaskClick(\"edit-task\", id, title, line2, line3)\r\n                }\r\n              >\r\n                Edit\r\n              </button>\r\n            )}\r\n            <button\r\n              className=\"delete\"\r\n              onClick={() => deleteATask(id, secondaryId)}\r\n            >\r\n              Delete\r\n            </button>\r\n          </Fragment>\r\n        )}\r\n        {type === \"project\" && (\r\n          <button className=\"delete\" onClick={() => deleteAProject(id)}>\r\n            Delete\r\n          </button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","// File: Modal.js\r\n// Description: Modal component\r\n\r\nimport { FC } from \"react\";\r\nimport \"./modal.scss\";\r\n\r\ninterface IModal {\r\n  setModalOpen: (isOpen: boolean) => void;\r\n}\r\nexport const Modal: FC<IModal> = ({ children, setModalOpen }) => {\r\n  //   function backdropClick(e) {\r\n  //     if (e.target.classList.contains(\"backdrop\")) {\r\n  //       setModalOpen(false);\r\n  //     }\r\n  //   }\r\n\r\n  return (\r\n    <div className=\"backdrop\">\r\n      <div className=\"modal-content\">\r\n        <div className=\"modal-head\">\r\n          <p onClick={() => setModalOpen(false)}>X</p>\r\n        </div>\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { ChangeEvent, FormEvent, useState } from \"react\";\r\nimport { Fab } from \"../../components/fab/fab.component\";\r\nimport \"./projects.styles.scss\";\r\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useContext } from \"react\";\r\nimport { StoreContext } from \"../../context/store/store.context\";\r\nimport { Card } from \"../../components/card/card.component\";\r\nimport { Modal } from \"../../components/modal/modal.component\";\r\nimport { Form } from \"../../components/form/form.component\";\r\nimport { Input } from \"../../components/input/input.component\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport const ProjectsPage = () => {\r\n  const { createAProject, getASingleProject, projects } = useContext(\r\n    StoreContext\r\n  );\r\n  const history = useHistory();\r\n\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [addProjectState, setAddProjectState] = useState<{\r\n    title: string;\r\n    description: string;\r\n  }>({ title: \"\", description: \"\" });\r\n\r\n  const handleCardClick = async (projectID: string) => {\r\n    await getASingleProject(projectID);\r\n    history.push(\"/projects/\" + projectID);\r\n  };\r\n\r\n  const handleChange = (\r\n    event:\r\n      | ChangeEvent<HTMLInputElement>\r\n      | ChangeEvent<HTMLSelectElement>\r\n      | ChangeEvent<HTMLTextAreaElement>\r\n  ) => {\r\n    const { value, name } = event.target;\r\n    setAddProjectState({ ...addProjectState, [name]: value });\r\n  };\r\n\r\n  const handleFormSubmit = async (event: FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n\r\n    setIsLoading(true);\r\n    const { title, description } = addProjectState;\r\n\r\n    await createAProject(title, description)\r\n      .then((res) => {\r\n        console.log(\"added project: \", res);\r\n        setIsModalOpen(false);\r\n        setIsLoading(false);\r\n      })\r\n      .catch(() => {\r\n        setIsLoading(false);\r\n        console.log(\"error adding project\");\r\n      });\r\n  };\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  return (\r\n    <div className=\"projects-page\">\r\n      <h1>Your Projects 📓</h1>\r\n      {isModalOpen && (\r\n        <Modal setModalOpen={setIsModalOpen}>\r\n          <Form\r\n            title=\"Add a Project\"\r\n            emoji=\"📓\"\r\n            buttonLabel=\"Add Project\"\r\n            handleSubmit={handleFormSubmit}\r\n            isLoading={isLoading}\r\n          >\r\n            <Input\r\n              name=\"title\"\r\n              label=\"Title\"\r\n              type=\"text\"\r\n              placeholder=\"Enter title\"\r\n              required\r\n              handleChange={handleChange}\r\n            />\r\n            <Input\r\n              name=\"description\"\r\n              label=\"Description\"\r\n              type=\"text\"\r\n              placeholder=\"Enter description\"\r\n              required\r\n              handleChange={handleChange}\r\n            />\r\n          </Form>\r\n        </Modal>\r\n      )}\r\n      <div className=\"content\">\r\n        {projects &&\r\n          projects.map((project, index) => {\r\n            return (\r\n              <Card\r\n                key={index}\r\n                id={project.id}\r\n                type=\"project\"\r\n                title={project.title}\r\n                line1={project.created}\r\n                line2={project.description}\r\n                cardClick={() => handleCardClick(project.id)}\r\n              />\r\n            );\r\n          })}\r\n        <Fab\r\n          icon={faPlus}\r\n          text=\"Project\"\r\n          onClick={() => setIsModalOpen(true)}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { ChangeEvent, FC, Fragment } from \"react\";\r\nimport \"./select.styles.scss\";\r\n\r\n// For creating a drop down with a label\r\ninterface ISelect {\r\n  handleChange: (\r\n    event:\r\n      | ChangeEvent<HTMLInputElement>\r\n      | ChangeEvent<HTMLSelectElement>\r\n      | ChangeEvent<HTMLTextAreaElement>\r\n  ) => void;\r\n  label: string;\r\n  list: { key: any; value: any }[] | undefined;\r\n}\r\n\r\nexport const Select: FC<ISelect> = ({ handleChange, label, list }) => {\r\n  return (\r\n    <>\r\n      <div className=\"select-component-wrapper\">\r\n        <label>\r\n          <p>{label}</p>\r\n          <select name=\"selectOption\" onChange={handleChange}>\r\n            {list &&\r\n              list.map((item, index) => {\r\n                return <option key={index} value={item.value}>{item.key}</option>;\r\n              })}\r\n          </select>\r\n        </label>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import { ChangeEvent, FormEvent, useContext, useState } from \"react\";\r\nimport { StoreContext } from \"../../context/store/store.context\";\r\nimport { Fab } from \"../../components/fab/fab.component\";\r\nimport { Card } from \"../../components/card/card.component\";\r\nimport \"./tasks.styles.scss\";\r\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Modal } from \"../../components/modal/modal.component\";\r\nimport { Form } from \"../../components/form/form.component\";\r\nimport { Input } from \"../../components/input/input.component\";\r\nimport { Select } from \"../../components/select/select.component\";\r\n\r\nexport const TasksPage = () => {\r\n  const { assignedTasks, createATask, projects } = useContext(StoreContext);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n  const initialTaskState = {\r\n    selectOption: \"\",\r\n    title: \"\",\r\n    description: \"\",\r\n    dueDate: \"\",\r\n  };\r\n\r\n  // Setting the first project as the default value\r\n  if (projects && projects.length > 0) {\r\n    initialTaskState.selectOption = projects[0].id;\r\n  }\r\n\r\n  const [addTaskState, setAddTaskState] = useState<{\r\n    selectOption: string;\r\n    title: string;\r\n    description: string;\r\n    dueDate: string;\r\n  }>(initialTaskState);\r\n\r\n  const handleChange = (\r\n    event:\r\n      | ChangeEvent<HTMLInputElement>\r\n      | ChangeEvent<HTMLSelectElement>\r\n      | ChangeEvent<HTMLTextAreaElement>\r\n  ) => {\r\n    const { value, name } = event.target;\r\n    setAddTaskState({ ...addTaskState, [name]: value });\r\n  };\r\n\r\n  const handleFormSubmit = async (event: FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n\r\n    setIsLoading(true);\r\n    const { selectOption, title, description, dueDate } = addTaskState;\r\n\r\n    await createATask(selectOption, title, description, dueDate)\r\n      .then((res) => {\r\n        console.log(\"added task: \", res);\r\n        setIsModalOpen(false);\r\n        setIsLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        setIsLoading(false);\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  return (\r\n    <div className=\"tasks-page\">\r\n      <h1>Assigned Task 📖</h1>\r\n      {isModalOpen && (\r\n        <Modal setModalOpen={setIsModalOpen}>\r\n          <Form\r\n            title=\"Add a Task\"\r\n            emoji=\"📖\"\r\n            buttonLabel=\"Add Task\"\r\n            handleSubmit={handleFormSubmit}\r\n            isLoading={isLoading}\r\n          >\r\n            <Input\r\n              name=\"title\"\r\n              label=\"Title\"\r\n              type=\"text\"\r\n              placeholder=\"Enter title\"\r\n              required\r\n              handleChange={handleChange}\r\n            />\r\n            <Input\r\n              name=\"description\"\r\n              label=\"Description\"\r\n              type=\"text\"\r\n              placeholder=\"Enter description\"\r\n              required\r\n              handleChange={handleChange}\r\n            />\r\n            <Input\r\n              name=\"dueDate\"\r\n              label=\"Due Date\"\r\n              type=\"date\"\r\n              required\r\n              handleChange={handleChange}\r\n            />\r\n            <Select\r\n              handleChange={handleChange}\r\n              label=\"Project\"\r\n              list={projects?.map((project) => {\r\n                return { key: project.title, value: project.id };\r\n              })}\r\n            ></Select>\r\n          </Form>\r\n        </Modal>\r\n      )}\r\n      <div className=\"content\">\r\n        {assignedTasks &&\r\n          assignedTasks.map((task, index) => {\r\n            if (task) {\r\n              const taskId = task.id;\r\n              return (\r\n                <div key={index}>\r\n                  <Card\r\n                    id={taskId}\r\n                    type=\"task\"\r\n                    title={task.title}\r\n                    line1={task.created}\r\n                    line2={task.due_date}\r\n                    //cardClick={() => handleCardClick(taskId)}\r\n                  />\r\n                </div>\r\n              );\r\n            } else {\r\n              return null;\r\n            }\r\n          })}\r\n        <Fab icon={faPlus} text=\"Task\" onClick={() => setIsModalOpen(true)} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import \"./_404.styles.scss\";\n\nexport default function _404Page() {\n  return (\n    <div className=\"_404-page\">\n      <h1>🦧</h1>\n      <p>Sorry we can't find that page!</p>\n    </div>\n  );\n}\n","import { MouseEventHandler, FC } from \"react\";\r\nimport { faMinus } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport \"./member-card.styles.scss\";\r\n\r\ninterface IMemberCard {\r\n  email: string;\r\n  firstName: string;\r\n  lastName: string;\r\n  cardClick: MouseEventHandler<HTMLButtonElement>;\r\n}\r\nexport const MemberCard: FC<IMemberCard> = ({\r\n  email,\r\n  firstName,\r\n  lastName,\r\n  cardClick,\r\n}) => {\r\n  return (\r\n    <div className=\"member-card-component-wrapper\">\r\n      <div className=\"member-card-info\">\r\n        <div className=\"member-name\">{firstName + \" \" + lastName}</div>\r\n        <div className=\"member-email\">{email}</div>\r\n      </div>\r\n\r\n      <div className=\"card-button-wrapper\">\r\n        <button className=\"delete\" onClick={cardClick}>\r\n          <FontAwesomeIcon icon={faMinus} />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { Fab } from \"../../components/fab/fab.component\";\r\nimport \"./project.styles.scss\";\r\nimport { faPlus, faMinus, faEdit } from \"@fortawesome/free-solid-svg-icons\";\r\nimport {\r\n  ChangeEvent,\r\n  FormEvent,\r\n  useContext,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\n\r\nimport { StoreContext } from \"../../context/store/store.context\";\r\nimport { Card } from \"../../components/card/card.component\";\r\nimport { MemberCard } from \"../../components/card/member-card/member-card.component\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Tooltip } from \"../../components/tooltip/tooltip.component\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Modal } from \"../../components/modal/modal.component\";\r\nimport { Form } from \"../../components/form/form.component\";\r\nimport { Input } from \"../../components/input/input.component\";\r\nimport { useWindowDimensions } from \"../../hooks/useWindowDimensions\";\r\n\r\nexport const ProjectPage = () => {\r\n  const {\r\n    workingProject,\r\n    createATask,\r\n    deleteATask,\r\n    getASingleProject,\r\n    updateAProject,\r\n    addMemberToAProject,\r\n    deleteMemberFromAProject,\r\n    addMemberToAProjectTask,\r\n    updateATask,\r\n    deleteMemberFromAProjectTask,\r\n  } = useContext(StoreContext);\r\n  const params = useParams<{ selectedProjectID: string }>();\r\n  const [workingTaskId, setWorkingTaskId] = useState(\"\");\r\n\r\n  const initialTaskState = {\r\n    selectOption: \"\",\r\n    title: \"\",\r\n    description: \"\",\r\n    dueDate: \"\",\r\n  };\r\n\r\n  // Setting the first project as the default value\r\n  // if (projects && projects.length > 0) {\r\n  //   initialTaskState.selectOption = projects[0].id;\r\n  // }\r\n\r\n  const [addTaskState, setAddTaskState] = useState<{\r\n    title: string;\r\n    description: string;\r\n    dueDate: string;\r\n  }>(initialTaskState);\r\n\r\n  const [editTaskState, setEditTaskState] = useState<{\r\n    taskID: string;\r\n    title: string;\r\n    dueDate: string;\r\n    description: string;\r\n  }>({ taskID: \"\", title: \"\", dueDate: \"\", description: \"\" });\r\n\r\n  useEffect(() => {\r\n    if (!workingProject) {\r\n      getASingleProject(params.selectedProjectID);\r\n    }\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const handleDeleteTaskCardClick = async (taskIndex: number) => {\r\n    // await getASingleProject(projectID);\r\n    workingProject &&\r\n      workingProject.tasks &&\r\n      (await deleteATask(\r\n        workingProject.tasks[taskIndex].id,\r\n        workingProject.id\r\n      ).catch((err) => {\r\n        console.log(err);\r\n      }));\r\n  };\r\n\r\n  const handleDeleteMemberCardClick = async (memberIndex: number) => {\r\n    workingProject &&\r\n      workingProject.members &&\r\n      (await deleteMemberFromAProject(\r\n        workingProject.id,\r\n        workingProject.members[memberIndex].email\r\n      ).catch((err) => {\r\n        console.log(err);\r\n      }));\r\n  };\r\n\r\n  const handleFabClick = (type: string, id?: string) => {\r\n    // workingProject &&\r\n    //   workingProject.tasks &&\r\n    //   (await createATask(\r\n    //     workingProject.id,\r\n    //     \"Task Name \" + workingProject.tasks.length,\r\n    //     \"Task Description \" + workingProject.tasks.length\r\n    //   ));\r\n    if (type === \"member\" && id) {\r\n      setWorkingTaskId(id);\r\n    }\r\n    setModalType(type);\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const handleEditTaskClick = (\r\n    type: string,\r\n    taskID: string,\r\n    title: string,\r\n    dueDate: string,\r\n    description: string\r\n  ) => {\r\n    setEditTaskState({ taskID, title, dueDate, description });\r\n    setModalType(type);\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const titleRef = useRef<HTMLHeadingElement | null>(null);\r\n  const descriptionRef = useRef<HTMLParagraphElement | null>(null);\r\n\r\n  useEffect(() => {\r\n    let titleEditCapture: HTMLHeadingElement;\r\n    let descriptionEditCapture: HTMLParagraphElement;\r\n    const finishEditTitle = () => {\r\n      if (workingProject) {\r\n        if (titleRef && titleRef.current) {\r\n          updateAProject(\r\n            workingProject.id,\r\n            titleRef.current.innerText,\r\n            undefined\r\n          );\r\n        }\r\n      }\r\n    };\r\n    if (titleRef && titleRef.current) {\r\n      titleEditCapture = titleRef.current;\r\n\r\n      titleEditCapture.addEventListener(\"focusout\", finishEditTitle);\r\n    }\r\n    const finishEditDescription = () => {\r\n      if (workingProject) {\r\n        if (descriptionRef && descriptionRef.current) {\r\n          updateAProject(\r\n            workingProject.id,\r\n            undefined,\r\n            descriptionRef.current.innerText\r\n          );\r\n        }\r\n      }\r\n    };\r\n    if (descriptionRef && descriptionRef.current) {\r\n      descriptionEditCapture = descriptionRef.current;\r\n\r\n      descriptionEditCapture.addEventListener(\r\n        \"focusout\",\r\n        finishEditDescription\r\n      );\r\n    }\r\n\r\n    return () => {\r\n      titleEditCapture.addEventListener(\"focusout\", finishEditTitle);\r\n      descriptionEditCapture.addEventListener(\r\n        \"focusout\",\r\n        finishEditDescription\r\n      );\r\n    };\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [modalType, setModalType] = useState(\"\");\r\n  const [addMemberState, setAddMemberState] = useState(\"\");\r\n\r\n  const handleChange = (\r\n    event:\r\n      | ChangeEvent<HTMLInputElement>\r\n      | ChangeEvent<HTMLSelectElement>\r\n      | ChangeEvent<HTMLTextAreaElement>\r\n  ) => {\r\n    const { value, name } = event.target;\r\n    if (modalType === \"member\" || modalType === \"memberToProject\") {\r\n      if (name === \"email\") {\r\n        setAddMemberState(value);\r\n      }\r\n    } else if (modalType === \"edit-task\") {\r\n      setEditTaskState({ ...editTaskState, [name]: value });\r\n    } else {\r\n      const { value, name } = event.target;\r\n      setAddTaskState({ ...addTaskState, [name]: value });\r\n    }\r\n  };\r\n\r\n  const handleDeleteMemberFromTask = async (memberEmail: string) => {\r\n    if (workingProject) {\r\n      await deleteMemberFromAProjectTask(\r\n        editTaskState.taskID,\r\n        workingProject.id,\r\n        memberEmail\r\n      )\r\n        .then((res) => {\r\n          console.log(\"deleted member: \", res);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  };\r\n\r\n  const handleFormSubmit = async (event: FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n\r\n    setIsLoading(true);\r\n    if (workingProject) {\r\n      if (modalType === \"member\") {\r\n        await addMemberToAProjectTask(\r\n          workingTaskId,\r\n          workingProject.id,\r\n          addMemberState\r\n        )\r\n          .then((res) => {\r\n            console.log(\"added member to project task: \", res);\r\n            setIsModalOpen(false);\r\n            setIsLoading(false);\r\n            setModalType(\"\");\r\n          })\r\n          .catch((err) => {\r\n            setIsLoading(false);\r\n            console.log(err);\r\n          });\r\n      } else if (modalType === \"memberToProject\") {\r\n        await addMemberToAProject(workingProject.id, addMemberState)\r\n          .then((res) => {\r\n            console.log(\"added member: \", res);\r\n            setIsModalOpen(false);\r\n            setIsLoading(false);\r\n            setModalType(\"\");\r\n          })\r\n          .catch((err) => {\r\n            setIsLoading(false);\r\n            console.log(err);\r\n          });\r\n      } else if (modalType === \"edit-task\") {\r\n        await updateATask(\r\n          editTaskState.taskID,\r\n          workingProject.id,\r\n          editTaskState.title,\r\n          editTaskState.description,\r\n          editTaskState.dueDate\r\n        )\r\n          .then((res) => {\r\n            console.log(\"edit task: \", res);\r\n            setIsModalOpen(false);\r\n            setModalType(\"\");\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n      } else {\r\n        const { title, description, dueDate } = addTaskState;\r\n        await createATask(workingProject.id, title, description, dueDate)\r\n          .then((res) => {\r\n            console.log(\"added task: \", res);\r\n            setIsModalOpen(false);\r\n            setIsLoading(false);\r\n          })\r\n          .catch((err) => {\r\n            setIsLoading(false);\r\n            console.log(err);\r\n          });\r\n      }\r\n    }\r\n  };\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const { width } = useWindowDimensions();\r\n\r\n  return (\r\n    <div className=\"project-page\">\r\n      {isModalOpen &&\r\n        (modalType === \"member\" || modalType === \"memberToProject\") && (\r\n          <Modal setModalOpen={setIsModalOpen}>\r\n            <Form\r\n              title=\"Add a Member\"\r\n              projectName={workingProject?.title}\r\n              emoji=\"🦧\"\r\n              buttonLabel=\"Add Member\"\r\n              handleSubmit={handleFormSubmit}\r\n              isLoading={isLoading}\r\n            >\r\n              <Input\r\n                name=\"email\"\r\n                label=\"Email\"\r\n                type=\"email\"\r\n                placeholder=\"Enter email\"\r\n                required\r\n                handleChange={handleChange}\r\n              />\r\n            </Form>\r\n          </Modal>\r\n        )}\r\n      {isModalOpen && modalType === \"task\" && (\r\n        <Modal setModalOpen={setIsModalOpen}>\r\n          <Form\r\n            title=\"Add a Task\"\r\n            projectName={workingProject?.title}\r\n            emoji=\"📖\"\r\n            buttonLabel=\"Add Task\"\r\n            handleSubmit={handleFormSubmit}\r\n            isLoading={isLoading}\r\n          >\r\n            <Input\r\n              name=\"title\"\r\n              label=\"Title\"\r\n              type=\"text\"\r\n              placeholder=\"Enter title\"\r\n              required\r\n              handleChange={handleChange}\r\n            />\r\n            <Input\r\n              name=\"description\"\r\n              label=\"Description\"\r\n              type=\"text\"\r\n              placeholder=\"Enter description\"\r\n              required\r\n              handleChange={handleChange}\r\n            />\r\n            <Input\r\n              name=\"dueDate\"\r\n              label=\"Due Date\"\r\n              type=\"date\"\r\n              required\r\n              handleChange={handleChange}\r\n            />\r\n            {/* <Select\r\n              handleChange={handleChange}\r\n              label=\"Project\"\r\n              list={[{ key: workingProject?.title, value: workingProject?.id }]}\r\n            ></Select> */}\r\n          </Form>\r\n        </Modal>\r\n      )}\r\n      {isModalOpen && modalType === \"edit-task\" && (\r\n        <Modal setModalOpen={setIsModalOpen}>\r\n          <Form\r\n            title=\"Edit Task\"\r\n            projectName={workingProject?.title}\r\n            emoji=\"📖\"\r\n            buttonLabel=\"Edit Task\"\r\n            handleSubmit={handleFormSubmit}\r\n            isLoading={isLoading}\r\n          >\r\n            <Input\r\n              name=\"title\"\r\n              label=\"Title\"\r\n              type=\"text\"\r\n              placeholder=\"Enter title\"\r\n              required\r\n              value={editTaskState.title}\r\n              handleChange={handleChange}\r\n            />\r\n            <Input\r\n              name=\"description\"\r\n              label=\"Description\"\r\n              type=\"text\"\r\n              placeholder=\"Enter description\"\r\n              value={editTaskState.description}\r\n              required\r\n              handleChange={handleChange}\r\n            />\r\n            <Input\r\n              name=\"dueDate\"\r\n              label=\"Due Date\"\r\n              type=\"date\"\r\n              required\r\n              value={editTaskState.dueDate}\r\n              handleChange={handleChange}\r\n            />\r\n            <div className=\"members-title\">\r\n              <p>Members</p>\r\n            </div>\r\n            {workingProject &&\r\n              workingProject.tasks &&\r\n              workingProject.tasks.length > 0 &&\r\n              workingProject.tasks\r\n                .find((task) => task.id === editTaskState.taskID)\r\n                ?.assigned_to?.map((user, index) => {\r\n                  return (\r\n                    <div key={index} className=\"members-list\">\r\n                      <p>{user.email}</p>\r\n                      <button\r\n                        type={\"button\"}\r\n                        onClick={() => handleDeleteMemberFromTask(user.email)}\r\n                      >\r\n                        <FontAwesomeIcon icon={faMinus} />\r\n                      </button>\r\n                    </div>\r\n                  );\r\n                })}\r\n          </Form>\r\n        </Modal>\r\n      )}\r\n      <div className=\"title-details\">\r\n        <Tooltip text=\"Click to edit\">\r\n          <h1\r\n            className=\"editable-on-click\"\r\n            contentEditable=\"true\"\r\n            suppressContentEditableWarning={true}\r\n            ref={titleRef}\r\n          >\r\n            {workingProject && workingProject.title}\r\n          </h1>\r\n          <FontAwesomeIcon icon={faEdit} className=\"right-side-icon\" />\r\n        </Tooltip>\r\n        <Tooltip text=\"Click to edit\">\r\n          <p\r\n            className=\"editable-on-click\"\r\n            contentEditable=\"true\"\r\n            suppressContentEditableWarning={true}\r\n            ref={descriptionRef}\r\n          >\r\n            {workingProject && workingProject.description}\r\n          </p>\r\n          <FontAwesomeIcon icon={faEdit} className=\"right-side-icon\" />\r\n        </Tooltip>\r\n      </div>\r\n\r\n      <div className=\"content\">\r\n        <section className=\"project-tasks-section\">\r\n          <div className=\"title-and-button\">\r\n            <h2>Project Tasks</h2>\r\n            <Tooltip\r\n              text=\"Add a new task\"\r\n              position={width > 1200 ? \"top\" : \"bottom\"}\r\n            >\r\n              <button onClick={() => handleFabClick(\"task\")}>\r\n                <FontAwesomeIcon icon={faPlus} />\r\n              </button>\r\n            </Tooltip>\r\n          </div>\r\n          <div className=\"task-cards\">\r\n            {workingProject &&\r\n            workingProject.tasks &&\r\n            workingProject.tasks.length > 0 ? (\r\n              workingProject.tasks.map((task, index) => {\r\n                return (\r\n                  <Card\r\n                    key={index}\r\n                    id={task.id}\r\n                    secondaryId={workingProject.id}\r\n                    type=\"task\"\r\n                    title={task.title}\r\n                    line1={task.created}\r\n                    line2={task.due_date}\r\n                    line3={task.description}\r\n                    cardClick={() => handleDeleteTaskCardClick(index)}\r\n                    addMembersClick={handleFabClick}\r\n                    editTaskClick={handleEditTaskClick}\r\n                  />\r\n                );\r\n              })\r\n            ) : (\r\n              <p>No tasks in this project</p>\r\n            )}\r\n          </div>\r\n        </section>\r\n        <section className=\"project-members-section\">\r\n          <div className=\"title-and-button\">\r\n            <h2>Project Members</h2>\r\n            <Tooltip\r\n              text=\"Add a new project member\"\r\n              position={width > 1200 ? \"top\" : \"bottom\"}\r\n            >\r\n              <button onClick={() => handleFabClick(\"memberToProject\")}>\r\n                <FontAwesomeIcon icon={faPlus} />\r\n              </button>\r\n            </Tooltip>\r\n          </div>\r\n          <div className=\"member-cards\">\r\n            {workingProject && workingProject.members ? (\r\n              workingProject.members.map((member, index) => {\r\n                return (\r\n                  <MemberCard\r\n                    key={index}\r\n                    email={member.email}\r\n                    firstName={member.firstName}\r\n                    lastName={member.lastName}\r\n                    cardClick={() => handleDeleteMemberCardClick(index)}\r\n                  />\r\n                );\r\n              })\r\n            ) : (\r\n              <p>No members in this project</p>\r\n            )}\r\n          </div>\r\n        </section>\r\n\r\n        <Fab icon={faPlus} text=\"Task\" onClick={() => handleFabClick(\"task\")} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import \"./App.scss\";\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\nimport { useContext } from \"react\";\r\n\r\n//context\r\nimport { AuthContext } from \"./context/auth/auth.context\";\r\n\r\n//custom components\r\nimport { Header } from \"./components/header/header.component\";\r\nimport { SignInSignUpPage } from \"./pages/signin-signup/signin-signup.page\";\r\nimport { Sidebar } from \"./components/sidebar/sidebar.component\";\r\n\r\n//pages\r\nimport { ProjectsPage } from \"./pages/projects/projects.page\";\r\nimport { TasksPage } from \"./pages/tasks/tasks.page\";\r\nimport _404Page from \"./pages/_404/_404.page\";\r\nimport { StoreProvider } from \"./context/store/store.context\";\r\nimport { ProjectPage } from \"./pages/project/project.page\";\r\n\r\nfunction App() {\r\n  const { token } = useContext(AuthContext);\r\n\r\n  if (!token) {\r\n    return (\r\n      <div className=\"app\">\r\n        <SignInSignUpPage />\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <StoreProvider>\r\n        <div className=\"app\">\r\n          <BrowserRouter>\r\n            <div className=\"sidebar-position\">\r\n              <Sidebar />\r\n              <div className=\"page-postion\">\r\n                <Header />\r\n                <Switch>\r\n                  <Route exact path=\"/\" component={ProjectsPage} />\r\n                  <Route exact path=\"/projects\" component={ProjectsPage} />\r\n                  <Route exact path=\"/tasks\" component={TasksPage} />\r\n                  <Route\r\n                    exact\r\n                    path=\"/projects/:selectedProjectID\"\r\n                    component={ProjectPage}\r\n                  />\r\n                  <Route\r\n                    exact\r\n                    path=\"/projects/:selectedProjectID/tasks/:selectedTaskID\"\r\n                    component={ProjectsPage}\r\n                  />\r\n                  <Route exact path=\"*\" component={_404Page} />\r\n                </Switch>\r\n              </div>\r\n            </div>\r\n          </BrowserRouter>\r\n        </div>\r\n      </StoreProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { AuthProvider } from \"./context/auth/auth.context\";\r\nimport { ToastProvider } from \"./context/toast/toast.context\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ToastProvider>\r\n      <AuthProvider>\r\n        <App />\r\n      </AuthProvider>\r\n    </ToastProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}